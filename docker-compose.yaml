services:
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway_container
    networks:
      - api_gateway_network 
    ports:
      - "80:80"
    depends_on:
      # - frontend
      - gamefication-service
      - notification-service
      - playlists-catalog-service
      - report-and-progress-service
      - training-service
      - user-management-service

  frontend:
    build: ./frontend
    container_name: frontend_container
    networks:
      - api_gateway_network 
    ports:
      - "8080:80"

  gamefication-service:
    build: ./gamefication-service
    container_name: gamefication-service_container
    networks:
      - api_gateway_network 
    ports:
      - "8001:8001"
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=admin
      - RABBIT_PASSWORD=password
    restart: on-failure

  notification-service:
    build: ./notification-service
    container_name: notification-service_container
    networks:
      - api_gateway_network 
    ports:
      - "8002:8002"
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=admin
      - RABBIT_PASSWORD=password
    restart: on-failure

  playlists-catalog-service:
    build: ./playlists-catalog-service
    container_name: playlists-catalog-service_container
    networks:
      - api_gateway_network 
    ports:
      - "8003:8003"
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=admin
      - RABBIT_PASSWORD=password
    restart: on-failure

  recommendation-worker:
    build: ./recommendation-worker
    container_name: recommendation-worker_container
    networks:
      - api_gateway_network 
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=admin
      - RABBIT_PASSWORD=password
    restart: on-failure

  report-and-progress-service:
    build: ./report-and-progress-service
    container_name: report-and-progress-service_container
    networks:
      - api_gateway_network 
    ports:
      - "8005:8005"
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=admin
      - RABBIT_PASSWORD=password
    restart: on-failure

  training-service:
    build: ./training-service
    container_name: training-service_container
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=admin
      - RABBIT_PASSWORD=password
    networks:
      - api_gateway_network 
    ports:
      - "8006:8006"  
    restart: on-failure

  user-management-service:
    build: ./user-management-service
    container_name: user-management-service_container
    networks:
      - api_gateway_network 
      - users-db_network
    depends_on:
      - users-db
    ports:
      - "8007:8007"
    environment:
      - MONGO_HOST=users-db
      - MONGO_PORT=27017
      - MONGO_DB=users-db
      - MONGO_USER=admin
      - MONGO_PASSWORD=admin

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    networks:
      - api_gateway_network 
    ports:
      - "5672:5672" # Porta para conexões do AMQP
      - "15672:15672" # Porta para o painel de administração do RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 30s
      retries: 1
  
  users-db:
    image: mongo:4.4
    restart: always
    container_name: users-db
    env_file:
      - ./users-db/.env
    environment:
      TZ: America/Sao_Paulo
    ports:
      - 27017:27017
    volumes:
      - users-db_data:/data/db
    networks:
      - users-db_network

networks:
  api_gateway_network:
  users-db_network:

volumes:
  users-db_data:
    driver: local